@page "/Identity/Account/Profile"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<User> _signInManager
@inject UserManager<User> _userManager
@inject IMatToaster Toaster

<h4>Profile</h4>
<div class="row">
    <div class="col-md-6">
        <EditForm Model="@profileModel" OnValidSubmit="@OnSaveProfileAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="firstName">FirstName</label>
                <InputText id="firstName" @bind-Value="profileModel.FirstName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="secondName">SecondName</label>
                <InputText id="secondName" @bind-Value="profileModel.SecondName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="phoneNumber">PhoneNumber</label>
                <InputText type=password id="phoneNumber" @bind-Value="profileModel.PhoneNumber" class="form-control" />
            </div>
            <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code
    {
    ProfileModel profileModel = new ProfileModel();
    protected async Task OnSaveProfileAsync()
    {
        var myProvider = AuthenticationStateProvider as CustomAuthenticationStateProvider;
        var authState = await myProvider.GetAuthenticationStateAsync();
        var user = await _userManager.FindByEmailAsync(authState.User.Identity.Name);

        user.FirstName = profileModel.FirstName;
        user.SecondName = profileModel.SecondName;
        user.PhoneNumber = profileModel.PhoneNumber;

        var result = await _userManager.UpdateAsync(user);

        Toaster.Add("Your profile has been updated", MatToastType.Info, "Info", "code");
    }
}


